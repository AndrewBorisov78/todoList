{"ast":null,"code":"var _jsxFileName = \"/Users/yakut/WebstormProjects/todo/src/components/app/app.js\";\nimport React, { Component } from 'react';\nimport AppHeader from '../app-header';\nimport TodoList from '../todo-list';\nimport SearchPanel from '../search-panel';\nimport ItemStatusFilter from '../item-status-filter';\nimport ItemAddForm from '../item-add-form';\nimport './app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 100;\n    this.state = {\n      items: [{\n        id: 1,\n        label: 'Drink Coffee',\n        important: false,\n        done: false\n      }, {\n        id: 2,\n        label: 'Learn React',\n        important: true,\n        done: false\n      }, {\n        id: 3,\n        label: 'Make Awesome App',\n        important: false,\n        done: false\n      }],\n      filter: 'all',\n      search: ''\n    };\n\n    this.onItemAdded = label => {\n      this.setState(state => {\n        const item = this.createItem(label);\n        return {\n          items: [...state.items, item]\n        };\n      });\n    };\n\n    this.toggleProperty = (arr, id, propName) => {\n      const idx = arr.findIndex(item => item.id === id);\n      const oldItem = arr[idx];\n      const value = !oldItem[propName];\n      const item = { ...arr[idx],\n        [propName]: value\n      };\n      return [...arr.slice(0, idx), item, ...arr.slice(idx + 1)];\n    };\n\n    this.onToggleDone = id => {\n      this.setState(state => {\n        const items = this.toggleProperty(state.items, id, 'done');\n        return {\n          items\n        };\n      });\n    };\n\n    this.onToggleImportant = id => {\n      this.setState(state => {\n        const items = this.toggleProperty(state.items, id, 'important');\n        return {\n          items\n        };\n      });\n    };\n\n    this.onDelete = id => {\n      this.setState(state => {\n        const idx = state.items.findIndex(item => item.id === id);\n        const items = [...state.items.slice(0, idx), ...state.items.slice(idx + 1)];\n        return {\n          items\n        };\n      });\n    };\n\n    this.onFilterChange = filter => {\n      this.setState({\n        filter\n      });\n    };\n\n    this.onSearchChange = search => {\n      this.setState({\n        search\n      });\n    };\n  }\n\n  createItem(label) {\n    return {\n      id: ++this.maxId,\n      label,\n      important: false,\n      done: false\n    };\n  }\n\n  filterItems(items, filter) {\n    if (filter === 'all') {\n      return items;\n    } else if (filter === 'active') {\n      return items.filter(item => !item.done);\n    } else if (filter === 'done') {\n      return items.filter(item => item.done);\n    }\n  }\n\n  searchItems(items, search) {\n    if (search.length === 0) {\n      return items;\n    }\n\n    return items.filter(item => {\n      return item.label.toLowerCase().indexOf(search.toLowerCase()) > -1;\n    });\n  }\n\n  render() {\n    const {\n      items,\n      filter,\n      search\n    } = this.state;\n    const doneCount = items.filter(item => item.done).length;\n    const toDoCount = items.length - doneCount;\n    const visibleItems = this.searchItems(this.filterItems(items, filter), search);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-app\",\n      children: [/*#__PURE__*/_jsxDEV(AppHeader, {\n        toDo: toDoCount,\n        done: doneCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-panel d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(SearchPanel, {\n          onSearchChange: this.onSearchChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ItemStatusFilter, {\n          filter: filter,\n          onFilterChange: this.onFilterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        items: visibleItems,\n        onToggleImportant: this.onToggleImportant,\n        onToggleDone: this.onToggleDone,\n        onDelete: this.onDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ItemAddForm, {\n        onItemAdded: this.onItemAdded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/yakut/WebstormProjects/todo/src/components/app/app.js"],"names":["React","Component","AppHeader","TodoList","SearchPanel","ItemStatusFilter","ItemAddForm","App","maxId","state","items","id","label","important","done","filter","search","onItemAdded","setState","item","createItem","toggleProperty","arr","propName","idx","findIndex","oldItem","value","slice","onToggleDone","onToggleImportant","onDelete","onFilterChange","onSearchChange","filterItems","searchItems","length","toLowerCase","indexOf","render","doneCount","toDoCount","visibleItems"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport AppHeader from '../app-header';\nimport TodoList from '../todo-list';\nimport SearchPanel from '../search-panel';\nimport ItemStatusFilter from '../item-status-filter';\nimport ItemAddForm from '../item-add-form';\n\nimport './app.css';\n\n\nexport default class App extends Component {\n\n    maxId = 100;\n\n    state = {\n        items: [\n            { id: 1, label: 'Drink Coffee', important: false, done: false },\n            { id: 2, label: 'Learn React', important: true, done: false },\n            { id: 3, label: 'Make Awesome App', important: false, done: false }\n        ],\n        filter: 'all',\n        search: ''\n    };\n\n    onItemAdded = (label) => {\n        this.setState((state) => {\n            const item = this.createItem(label);\n            return { items: [...state.items, item] };\n        })\n    };\n\n    toggleProperty = (arr, id, propName) => {\n        const idx = arr.findIndex((item) => item.id === id);\n        const oldItem = arr[idx];\n        const value = !oldItem[propName];\n\n        const item = { ...arr[idx], [propName]: value } ;\n        return [\n            ...arr.slice(0, idx),\n            item,\n            ...arr.slice(idx + 1)\n        ];\n    };\n\n    onToggleDone = (id) => {\n        this.setState((state) => {\n            const items = this.toggleProperty(state.items, id, 'done');\n            return { items };\n        });\n    };\n\n    onToggleImportant = (id) => {\n        this.setState((state) => {\n            const items = this.toggleProperty(state.items, id, 'important');\n            return { items };\n        });\n    };\n\n    onDelete = (id) => {\n        this.setState((state) => {\n            const idx = state.items.findIndex((item) => item.id === id);\n            const items = [\n                ...state.items.slice(0, idx),\n                ...state.items.slice(idx + 1)\n            ];\n            return { items };\n        });\n    };\n\n    onFilterChange = (filter) => {\n        this.setState({ filter });\n    };\n\n    onSearchChange = (search) => {\n        this.setState({ search });\n    };\n\n    createItem(label) {\n        return {\n            id: ++this.maxId,\n            label,\n            important: false,\n            done: false\n        };\n    }\n\n    filterItems(items, filter) {\n        if (filter === 'all') {\n            return items;\n        } else if (filter === 'active') {\n            return items.filter((item) => (!item.done));\n        } else if (filter === 'done') {\n            return items.filter((item) => item.done);\n        }\n    }\n\n    searchItems(items, search) {\n        if (search.length === 0) {\n            return items;\n        }\n\n        return items.filter((item) => {\n            return item.label.toLowerCase().indexOf(search.toLowerCase()) > -1;\n        });\n    }\n\n    render() {\n        const { items, filter, search } = this.state;\n        const doneCount = items.filter((item) => item.done).length;\n        const toDoCount = items.length - doneCount;\n        const visibleItems = this.searchItems(this.filterItems(items, filter), search);\n\n        return (\n            <div className=\"todo-app\">\n                <AppHeader toDo={toDoCount} done={doneCount}/>\n\n                <div className=\"search-panel d-flex\">\n                    <SearchPanel\n                        onSearchChange={this.onSearchChange}/>\n\n                    <ItemStatusFilter\n                        filter={filter}\n                        onFilterChange={this.onFilterChange} />\n                </div>\n\n                <TodoList\n                    items={ visibleItems }\n                    onToggleImportant={this.onToggleImportant}\n                    onToggleDone={this.onToggleDone}\n                    onDelete={this.onDelete} />\n\n                <ItemAddForm\n                    onItemAdded={this.onItemAdded} />\n            </div>\n        );\n    };\n}"]},"metadata":{},"sourceType":"module"}